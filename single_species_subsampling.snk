import os, json
from pathlib import Path
from workflow.scripts import configparser
from workflow.scripts import utilities

# --------------------------------------------------------------------------------------------------------------------------------------------
# GROUPS SETTING

GROUPS = set(config['samples'])

# --------------------------------------------------------------------------------------------------------------------------------------------
# SOFT & CONDA CONFIGURATION
config['softparams'] = {}

fname = workflow.source_path('softpaths.json')
with open(fname) as f:
    config['softparams']['soft'] = json.load(f)

fname = workflow.source_path('condaenvs.json')
with open(fname) as f:
    config['softparams']['conda'] = json.load(f)

config.setdefault('miscs', {})
config['miscs'].setdefault('GENERIC_THREADS', utilities.DEFAULT_GENERIC_THREADS)
config['miscs'].setdefault('GENERIC_THREADS_SPLIT', utilities.DEFAULT_GENERIC_THREADS_SPLIT)

# --------------------------------------------------------------------------------------------------------------------------------------------
# WORKFLOW

outputs = configparser.parse_config(config['outputs'], GROUPS)
print (outputs)

rule all:
    input:      
        'logs/configuration.json',
        outputs

rule copy_config:
    output:
        'logs/configuration.json'
    params:
        config = config
    script:
        'workflow/scripts/copyconfig.py'

# --------------------------------------------------------------------------------------------------------------------------------------------

module rg:
    snakefile: 'workflow/reference_genomes.snk'
    config: config

use rule * from rg as rg_*

module rc:
    snakefile: "workflow/references_comparison.snk"
    config: config

use rule * from rc as rc_*

module rs:
    snakefile: "workflow/read_subsample.snk"
    config: config

use rule * from rs as rs_*

module rm:
    snakefile: "workflow/read_mapping.snk"
    config: config

use rule * from rm as rm_*

module ra:
    snakefile: "workflow/reads_assembly.snk"
    config: config

use rule * from ra as ra_*

module vc:
    snakefile: "workflow/variants_calling.snk"
    config: config

use rule * from vc as vc_*

module sx:
    snakefile: "workflow/strainxpress.snk"
    config: config

use rule * from sx as sx_*

module sb:
    snakefile: "workflow/strainberry_single.snk"
    config: config

use rule * from sb as sb_*

module wh:
    snakefile: "workflow/whatshap_single.snk"
    config: config

use rule * from wh as wh_*

module flsi:
    snakefile: "workflow/floria_single.snk"
    config: config

use rule * from flsi as flsi_*

module hs:
    snakefile: "workflow/haplotype_stats.snk"
    config: config

use rule * from hs as hs_*