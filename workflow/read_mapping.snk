from scripts.utilities import get_mapping_ref

rule minimap2_pacbio_clr:
    input:
        fasta = lambda wc: get_mapping_ref(wc, config),
        lr = 'reads/{group}/pacbio/merged_clr.fastq.gz'
    output:
        'mapping/{group}/merged.pacbio_clr.bam'
    conda:
        'envs/minimap2.yaml'
    log:
        'logs/{group}/minimap2.pacbio.log'
    threads:
        16
    shell:
        '(minimap2 -t {threads} -ax map-pb {input.fasta} {input.lr} | samtools view -Sub - | samtools sort --threads {threads} - > {output}) 2> {log}'

rule minimap2_nanopore:
    input:
        fasta = lambda wc: get_mapping_ref(wc, config),
        lr = 'reads/{group}/nanopore/merged.fastq.gz'
    output:
        'mapping/{group}/merged.nanopore.bam'
    conda:
        'envs/minimap2.yaml'
    log:
        'logs/{group}/minimap2.nanopore.log'
    threads:
        16
    shell:
        '(minimap2 -t {threads} -ax map-ont {input.fasta} {input.lr} | samtools view -Sub - | samtools sort --threads {threads} - > {output}) 2> {log}'

rule minimap2_illumina:
    input:
        fasta = lambda wc: get_mapping_ref(wc, config),
        sr1 = 'reads/{group}/illumina/merged/R1.fastq.gz',
        sr2 = 'reads/{group}/illumina/merged/R2.fastq.gz',
    output:
        'mapping/{group}/merged.illumina.bam'
    conda:
        'envs/minimap2.yaml'
    log:
        'logs/{group}/minimap2.illumina.log'
    threads:
        16
    shell:
        '(minimap2 -t {threads} -ax sr {input.fasta} {input.sr1} {input.sr2} | samtools view -Sub - | samtools sort --threads {threads} - > {output})  2> {log}'

rule index_bam:
    input:
        'mapping/{group}/{name}.{kind}.bam'
    output:
        'mapping/{group}/{name}.{kind}.bam.bai'
    conda:
        'envs/minimap2.yaml'
    shell:
        'samtools index {input}'
